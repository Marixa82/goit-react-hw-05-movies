{"version":3,"file":"static/js/510.afce2060.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieDetailsList/MovieDetailsList.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nwidth: 180px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;`","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Wrapper>\n       <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/> \n    </Wrapper>\n    ) \n}","import { URL_IMG } from \"services/api\";\nimport React from \"react\";\n\n\nconst MovieDetailsList = ({ movies}) => {\n    const { overview, poster_path, original_title, vote_average, genres } = movies || {};\n        return (\n          <>\n      {poster_path && (\n      <img src={`${URL_IMG}w500${poster_path}`} alt={original_title} />\n    )}\n    {original_title && (\n      <p>{original_title}</p>\n    )}\n    {vote_average && (\n      <p>User score: {Math.round(Number(vote_average) * 10)} %</p>\n    )}\n    {overview && (\n      <p>{overview}</p>\n    )}\n    {genres && genres.length > 0 && (\n      <ul>Genres: {genres.map((genre) => genre.name).join(', ')}</ul>\n    )}\n        </>\n    )\n};\nexport default MovieDetailsList;","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport React from 'react';\n// import Cast from 'components/Cast/Cast';\nimport { Loader } from 'components/Loader/Loader';\nimport { useRef, Suspense, useState, useEffect} from \"react\"; \nimport * as API from 'services/api';\nimport MovieDetailsList from 'components/MovieDetailsList/MovieDetailsList';\n\nconst MovieDetails = () => {\n  const posterImgUrl = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  \n   useEffect(() => {\n      \n     const movieDetails = async () => {\n       try {\n         const movieDetailsData = await API.fetchMovieDetails(movieId)\n         setMovieData(movieDetailsData);\n       } catch (error) {\n         setError(error);\n       } finally {\n         setIsLoading(false);\n       }\n     };\n       movieDetails(movieId);\n       \n  }, [movieId])\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Назад к странице коллекции</Link>\n      <h1>Movie Details:\n        {movieData?.title\n        || 'Title not available'}</h1>\n      \n      <>\n        {error && <p>Something goes wrong</p>} \n       {isLoading && <Loader />}\n        <MovieDetailsList movies={movieData} posterImgUrl={posterImgUrl}/> \n        \n      </>  \n      <ul>\n        <li>\n          <Link to=\"cast\">Actors</Link>\n          {/* <Cast/> */}\n        </li>\n        <li>\n          <Link to=\"reviews\">About</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>LOADING SUBPAGE...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n\n /* <div>\n        <img\n    src={movieData?.backdrop_path && posterImgUrl + movieData.backdrop_path}\n    alt={movieData?.title}\n/>\n\n            {movieData?.original_title}\n              {movieData?.vote_average && (Math.round(movieData['vote_average'] * 10) / 10)}  \n              {movieData?.overview}\n              \n                 {movieData?.genres && (\n  <div>\n    {movieData['genres'].map(genre => genre.name).join(' ')}\n  </div>\n)}\n            </div> */","import axios from \"axios\";\nexport const URL = 'https://api.themoviedb.org/3/';\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\n\nexport const API_KEY = '0c24bd03222b39ae028a9061bc80e8a5';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MTIzMmM2NWVkOGEyYzk3YzJjZDZkN2Y2NjJhNThhNiIsInN1YiI6IjY0ZGNjNzQ2NTllOGE5MDBhYzA3ZjkyMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VEfQXLXm8dTFjmSR93bdP0x3SCZbTJRytNBaFFU8fLo'\n  }\n};\nexport const fetchSearchMovieData = async (searchQuery) => {\n       try {\n        const response = axios.get(`${URL}search/movie?query=${searchQuery}` , options);\n        return  ((await response).data);\n      } catch (error) {\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n}\n    \n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const resp = await axios.get(`${URL}movie/${movieId}` , options)\n    return resp.data;\n  } catch (error) {\n    console.error('Error fetching  movies:', error);\n    throw error\n  };\n};\nexport const fetchReviewMovieData = async (movieId) => {\n  try {\n    const response = await axios.get(`${URL}movie/${movieId}/reviews?language=en-US&page=1`, options);\n\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews movies:', error);\n    throw error;\n  }\n};\n  \n  \n// export const fetchReviewMovieData = (movieId) => {\n//     return axios.get(`${URL}movie/${movieId}/reviews?language=en-US` , options)\n//         .then(resp => resp.data)\n//         .catch(error => {\n//             console.error('Error fetching reviews movies:', error);\n//             throw error;\n//         });\n// };\nexport const fetchCreditsMovieData = (movieId) => {\n    return axios.get(`${URL}movie/${movieId}/credits?language=en-US`, options)\n        .then(resp => resp.data)\n        .catch(error => {\n            console.error('Error fetching credits movies:', error);\n            throw error;\n        });\n};\n\nexport const fetchTrendingMovieDay = () => {\n    return axios.get(`${URL}trending/movie/day`, options)\n        .then(response => response.data.results)\n        .catch(error => {\n            console.error('Error fetching trending movies:', error);\n            throw error;\n        });\n};\n\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","_ref","_ref2","movies","overview","poster_path","original_title","vote_average","genres","_jsxs","_Fragment","src","concat","URL_IMG","alt","Math","round","Number","length","map","genre","name","join","_location$state$from","_location$state","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","movieDetails","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieDetailsData","wrap","_context","prev","next","API","sent","t0","finish","stop","apply","arguments","Link","to","current","title","MovieDetailsList","posterImgUrl","Suspense","fallback","Outlet","URL","options","method","headers","accept","Authorization","fetchSearchMovieData","searchQuery","response","axios","abrupt","data","console","_x","fetchMovieDetails","_callee2","resp","_context2","_x2","fetchReviewMovieData","_ref3","_callee3","_context3","results","_x3","fetchCreditsMovieData","then","catch","fetchTrendingMovieDay"],"sourceRoot":""}