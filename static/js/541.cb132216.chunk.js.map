{"version":3,"file":"static/js/541.cb132216.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Movie/Movie.styled.js","components/Movie/MovieList.jsx","pages/Pages.styled.js","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nwidth: 180px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;`","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Wrapper>\n       <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/> \n    </Wrapper>\n    ) \n}","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nconst Ul = styled.ul`\nlist-style: none;\npadding: 0%;\n\n`\nconst Options = styled(Link)`\ntext-decoration: none;\nfont-size: medium;\nfont-weight: bold;\ncolor: black;\nfont-size: 15px;\n&:hover,:focus, ::after{\n    color: blue;\n}`\n\nconst Li = styled.li`\nmargin-bottom: 10px;\npadding-left: 20px;\n`\nconst Title = styled.h2`\nfont-size: medium;\n\n`\nconst Div = styled.div`\n\n`\nexport { Ul, Options, Li, Title, Div }","\nimport React from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { Options, Ul, Title, Div } from \"./Movie.styled\";\nimport PropTypes from 'prop-types';\n// import { URL_IMG } from \"services/api\";\n\nconst MovieList = ({ movies }) => {\n  // const { backdrop_path, id, title } = movies || {}; \nconst location = useLocation();\n  const visibleMovies = movies.filter(movie => movie.id && movie.title && movie.backdrop_path);\n  // const posterUrl = `${URL_IMG}w300${backdrop_path}`;\n    return (\n        <Div>\n           <Ul>\n             {visibleMovies.map(movie => (\n              <li key={movie.id}>\n                <Options to={`/movies/${movie.id}`} state={{ from: location }}>\n                   <Title>{movie.title}</Title>\n                   {/* {backdrop_path && (\n        <img src={posterUrl} alt={title} />\n      )} */}\n                </Options>\n              </li>\n            ))}\n          </Ul>\n        </Div>\n           )\n}\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n}\nexport default MovieList;    \n\n","import styled from '@emotion/styled';\n\nconst Main = styled.main`\ndisplay: flex;\nmargin-top: 20px;\n\n`\n\nconst Title = styled.h2`\nmargin: 0%;`\nexport { Main, Title }","import {Main, Title} from \"./Pages.styled\";\nimport { useState, useEffect } from \"react\";\nimport * as API from 'services/api';\nimport MovieList from \"components/Movie/MovieList\";\nimport { Loader } from \"components/Loader/Loader\";\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n    \n    const trendingMovieDay = async () => {\n      try {\n        setIsLoading(true);\n        const trendingMovies = await API.fetchTrendingMovieDay();\n        setMovies(trendingMovies);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n      trendingMovieDay();\n  }, [])\n\n    return (\n      <Main>\n        <div>\n          {isLoading && <Loader />}\n          <Title>Tranding Today</Title>\n           {error ? (<p>Error: {error.message}</p>\n                ) : movies !== 0 ? (\n                    <MovieList movies={movies} />\n                ) : (\n                    <p>No movies found.</p> \n                )}\n        </div>\n          </Main>\n    )\n}\nexport default HomePage;","import axios from \"axios\";\nexport const URL = 'https://api.themoviedb.org/3/';\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\n\nexport const API_KEY = '0c24bd03222b39ae028a9061bc80e8a5';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MTIzMmM2NWVkOGEyYzk3YzJjZDZkN2Y2NjJhNThhNiIsInN1YiI6IjY0ZGNjNzQ2NTllOGE5MDBhYzA3ZjkyMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VEfQXLXm8dTFjmSR93bdP0x3SCZbTJRytNBaFFU8fLo'\n  }\n};\nexport const fetchSearchMovieData = async (searchQuery) => {\n       try {\n        const response = axios.get(`${URL}search/movie?query=${searchQuery}` , options);\n        return  ((await response).data);\n      } catch (error) {\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n}\n    \n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const resp = await axios.get(`${URL}movie/${movieId}` , options)\n    return resp.data;\n  } catch (error) {\n    console.error('Error fetching  movies:', error);\n    throw error\n  };\n};\nexport const fetchReviewMovieData = async (movieId) => {\n  try {\n    const response = await axios.get(`${URL}movie/${movieId}/reviews?language=en-US&page=1`, options);\n\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews movies:', error);\n    throw error;\n  }\n};\n  \n  \n// export const fetchReviewMovieData = (movieId) => {\n//     return axios.get(`${URL}movie/${movieId}/reviews?language=en-US` , options)\n//         .then(resp => resp.data)\n//         .catch(error => {\n//             console.error('Error fetching reviews movies:', error);\n//             throw error;\n//         });\n// };\nexport const fetchCreditsMovieData = (movieId) => {\n    return axios.get(`${URL}movie/${movieId}/credits?language=en-US`, options)\n        .then(resp => resp.data)\n        .catch(error => {\n            console.error('Error fetching credits movies:', error);\n            throw error;\n        });\n};\n\nexport const fetchTrendingMovieDay = () => {\n    return axios.get(`${URL}trending/movie/day`, options)\n        .then(response => response.data.results)\n        .catch(error => {\n            console.error('Error fetching trending movies:', error);\n            throw error;\n        });\n};\n\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","Ul","Options","Link","_templateObject2","Li","_templateObject3","Title","_templateObject4","Div","_templateObject5","_ref","movies","location","useLocation","visibleMovies","filter","movie","id","title","backdrop_path","map","to","concat","state","from","Main","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","trendingMovieDay","_asyncToGenerator","_regeneratorRuntime","mark","_callee","trendingMovies","wrap","_context","prev","next","API","sent","t0","finish","stop","apply","arguments","_jsxs","message","MovieList","URL","URL_IMG","options","method","headers","accept","Authorization","fetchSearchMovieData","searchQuery","response","axios","abrupt","data","console","_x","fetchMovieDetails","_ref2","_callee2","movieId","resp","_context2","_x2","fetchReviewMovieData","_ref3","_callee3","_context3","results","_x3","fetchCreditsMovieData","then","catch","fetchTrendingMovieDay"],"sourceRoot":""}