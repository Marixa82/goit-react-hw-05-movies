{"version":3,"file":"static/js/415.eb460757.chunk.js","mappings":"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","sources":["components/HomeItem.jsx","components/HomeList.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nexport const HomeItem = ({title,name, id}) => {\n const location = useLocation();\n  return (\n      <li >\n            <Link  to={`movies/${id}`} state={{ from: location }}>\n              {title?? name}\n            </Link>  \n            </li>\n)    \n}\n\n","import { HomeItem } from \"./HomeItem\";\n// import {  useLocation } from 'react-router-dom';\nexport const MovieList = ({ movies }) => {\n\n    const visibleMovies = movies.filter(movie => movie.id && movie.title);\n    return (\n        \n        <ul>\n            {visibleMovies.map(movie => (\n                \n                <HomeItem key={movie.id} title={movie.title} />\n            ))}\n        </ul>\n           )\n}\n        \n\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nwidth: 180px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;`","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Wrapper>\n       <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/> \n    </Wrapper>\n    ) \n}","\nimport { useState, useEffect } from \"react\";\nimport * as API from 'services/api';\nimport { MovieList } from \"components/HomeList\";\nimport { Loader } from \"components/Loader/Loader\";\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n    \n    const trendingMovieDay = async () => {\n      try {\n        setIsLoading(true);\n        const trendingMovies = await API.fetchTrendingMovieDay();\n        setMovies(trendingMovies);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n      trendingMovieDay();\n  }, [])\n\n    return (\n      <main>\n        <div>\n          {isLoading && <Loader />}\n          <h2>Tranding Today</h2>\n           {error ? (<p>Error: {error.message}</p>\n                ) : movies !== 0 ? (\n                    <MovieList movies={movies} />\n                ) : (\n                    <p>No movies found.</p> \n                )}\n        </div>\n          </main>\n    )\n}\nexport default HomePage;","import axios from \"axios\";\n// const URLCredits = 'https://api.themoviedb.org/3/movie/{movie_id}/credits'\n// PATH PARAMS: {movie_id: ''}\n// const URLReviews = 'https://api.themoviedb.org/3/movie/{movie_id}/reviews'\n// PATH PARAMS: {movie_id: ''}\nconst URL = 'https://api.themoviedb.org/3/';\n// PATH PARAMS: {movie_id: ''}, QUERY PARAMS: {append_to_response: video, image, describe.....}\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\n// const IMG_BASE_URL = 'https://image.tmdb.org/t/p/';\n// const URLSearch = 'https://api.themoviedb.org/3/search/movie'\nconst KEY = 'aa3953ee8706f4bf1c70825a0873668c';\n\nexport const fetchSearchMovieData = async (searchQuery) => {\n     const searchParams = new URLSearchParams({\n         api_key: KEY,\n         query: searchQuery\n  });\n     try {\n        const response = axios.get(`${URL}search/movie?api_key=${searchParams}`);\n         return response.data;\n        \n    } catch (error) {\n        // Handle errors here\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n    }\n// async function fetchCreditsMovieData(id) {\n//   const searchParams = new URLSearchParams({\n//     api_key: KEY,\n//   });\n\n//   const response = await axios.get(\n//     `${URL}movie/${id}/credits?${searchParams}`\n//   );\n\n//   if (response.data.cast) {\n//     return response.data.cast;\n//   }\n//   return Promise.reject(\n//     new Error(`\n//   There are no info about cast for this movie`)\n//   );\n// }\n// // ______________________________________\n// export const fetchMovieDetails = async movieId => {\n//     const res = await axios.get(`${URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n//     console.log(res.data) ;\n// }\nexport const fetchMovieDetails = async (movieId) => {\n     const searchParams = new URLSearchParams({\n         api_key: KEY,\n         id: movieId,\n  });\n     try {\n        const response = axios.get(`${URL}movie?api_key=${searchParams}`);\n         return response.movieId;\n        \n    } catch (error) {\n        // Handle errors here\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n    }\n// export const fetchMovieDetails = (movieId) => {\n//     return axios.get(`${URL}movie/${movieId}?api_key=${KEY}&language=en-US`)\n//         .then(resp => resp.data)\n//         .catch(error => {\n//             console.error('Error fetching credits movies:', error);\n//             throw error;\n//         });\n// };\n// export const fetchCreditsMovieData = async (id) => {\n//     const resp = await axios.get(`${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`);\n//     console.log(resp) ;\n// }\nexport const fetchCreditsMovieData = () => {\n    return axios.get(`${URL}movie/credits?api_key=${KEY}&language=en-US`)\n        .then(resp => resp.data)\n        .catch(error => {\n            console.error('Error fetching credits movies:', error);\n            throw error;\n        });\n};\n\nexport const fetchTrendingMovieDay = () => {\n    return axios.get(`${URL}trending/movie/day?api_key=${KEY}`)\n        .then(response => response.data.results)\n        .catch(error => {\n            console.error('Error fetching trending movies:', error);\n            throw error;\n        });\n};\n// export const fetchTrendingMovieDay = async () => {\n//     const {response} = await axios.get(`${URL}trending/all/day?api_key=${KEY}`);\n//     return response.data.results;\n// }\n// export const fetchDetailsMovie = async movieId => {\n//     const { data } = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n//     return data;\n// }\n// const api = { fetchCreditsMovieData };\n// export default api;"],"names":["HomeItem","_ref","title","name","id","location","useLocation","_jsx","children","Link","to","concat","state","from","MovieList","visibleMovies","movies","filter","movie","map","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","trendingMovieDay","_asyncToGenerator","_regeneratorRuntime","mark","_callee","trendingMovies","wrap","_context","prev","next","API","sent","t0","finish","stop","apply","arguments","_jsxs","message","URL","URL_IMG","KEY","fetchSearchMovieData","searchQuery","searchParams","response","URLSearchParams","api_key","query","axios","abrupt","data","console","_x","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x2","fetchCreditsMovieData","then","resp","catch","fetchTrendingMovieDay","results"],"sourceRoot":""}