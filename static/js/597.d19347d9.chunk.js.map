{"version":3,"file":"static/js/597.d19347d9.chunk.js","mappings":"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","sources":["components/Cast.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'services/api';\nimport { Loader } from './Loader/Loader';\n// import api from 'services/api';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const { movieCredit, setMovieCredit } = useState();\n  // const { error, setError } = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const posterImgUrl = API.URL_IMG;\n\n  \n  useEffect(() => {\n    const creditsMovieData = async (id) => {\n      try {\n        setIsLoading(true);\n        const data = await API.fetchCreditsMovieData(id);\n        const creditsForRender = data.filter(person => person.profile_path !== null);\n        setMovieCredit(creditsForRender)\n      } catch (error) {\n        console.log(error.message);\n      } \n    };\n      creditsMovieData(movieId)\n  }, [setMovieCredit, movieId])\n\n  return (\n    <section>\n      {/* {error && <p>Something goes wrong</p>} */}\n        {isLoading && <Loader />}\n      {movieCredit && (\n        <ul>\n          {movieCredit.map(person => (\n            <li key={person.id}>\n              <img\n                src={`${posterImgUrl}w185${person.profile_path}`}\n                alt={person.character}\n              />\n              <p>{person.name}</p>\n              <p>Character: {person.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  //   <>\n        \n  //     <div>Cast: {movieCredit.id}</div>\n  //  </>\n  ) \n};","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nwidth: 180px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;`","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Wrapper>\n       <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/> \n    </Wrapper>\n    ) \n}","import axios from \"axios\";\n// const URLCredits = 'https://api.themoviedb.org/3/movie/{movie_id}/credits'\n// PATH PARAMS: {movie_id: ''}\n// const URLReviews = 'https://api.themoviedb.org/3/movie/{movie_id}/reviews'\n// PATH PARAMS: {movie_id: ''}\nconst URL = 'https://api.themoviedb.org/3/';\n// PATH PARAMS: {movie_id: ''}, QUERY PARAMS: {append_to_response: video, image, describe.....}\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\n// const IMG_BASE_URL = 'https://image.tmdb.org/t/p/';\n// const URLSearch = 'https://api.themoviedb.org/3/search/movie'\nconst KEY = 'aa3953ee8706f4bf1c70825a0873668c';\n\nexport const fetchSearchMovieData = async (searchQuery) => {\n     const searchParams = new URLSearchParams({\n         api_key: KEY,\n         query: searchQuery\n  });\n     try {\n        const response = axios.get(`${URL}search/movie?api_key=${searchParams}`);\n         return response.data;\n        \n    } catch (error) {\n        // Handle errors here\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n    }\n// async function fetchCreditsMovieData(id) {\n//   const searchParams = new URLSearchParams({\n//     api_key: KEY,\n//   });\n\n//   const response = await axios.get(\n//     `${URL}movie/${id}/credits?${searchParams}`\n//   );\n\n//   if (response.data.cast) {\n//     return response.data.cast;\n//   }\n//   return Promise.reject(\n//     new Error(`\n//   There are no info about cast for this movie`)\n//   );\n// }\n// // ______________________________________\n// export const fetchMovieDetails = async movieId => {\n//     const res = await axios.get(`${URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n//     console.log(res.data) ;\n// }\nexport const fetchMovieDetails = async (movieId) => {\n     const searchParams = new URLSearchParams({\n         api_key: KEY,\n         id: movieId,\n  });\n     try {\n        const response = axios.get(`${URL}movie?api_key=${searchParams}`);\n         return response.movieId;\n        \n    } catch (error) {\n        // Handle errors here\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n    }\n// export const fetchMovieDetails = (movieId) => {\n//     return axios.get(`${URL}movie/${movieId}?api_key=${KEY}&language=en-US`)\n//         .then(resp => resp.data)\n//         .catch(error => {\n//             console.error('Error fetching credits movies:', error);\n//             throw error;\n//         });\n// };\n// export const fetchCreditsMovieData = async (id) => {\n//     const resp = await axios.get(`${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`);\n//     console.log(resp) ;\n// }\nexport const fetchCreditsMovieData = () => {\n    return axios.get(`${URL}movie/credits?api_key=${KEY}&language=en-US`)\n        .then(resp => resp.data)\n        .catch(error => {\n            console.error('Error fetching credits movies:', error);\n            throw error;\n        });\n};\n\nexport const fetchTrendingMovieDay = () => {\n    return axios.get(`${URL}trending/movie/day?api_key=${KEY}`)\n        .then(response => response.data.results)\n        .catch(error => {\n            console.error('Error fetching trending movies:', error);\n            throw error;\n        });\n};\n// export const fetchTrendingMovieDay = async () => {\n//     const {response} = await axios.get(`${URL}trending/all/day?api_key=${KEY}`);\n//     return response.data.results;\n// }\n// export const fetchDetailsMovie = async movieId => {\n//     const { data } = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n//     return data;\n// }\n// const api = { fetchCreditsMovieData };\n// export default api;"],"names":["Cast","movieId","useParams","_useState","useState","movieCredit","setMovieCredit","_useState2","_useState3","_slicedToArray","isLoading","setIsLoading","posterImgUrl","API","useEffect","creditsMovieData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","data","creditsForRender","wrap","_context","prev","next","sent","filter","person","profile_path","t0","console","log","message","stop","_x","apply","arguments","_jsxs","children","_jsx","Loader","map","src","concat","alt","character","name","Wrapper","styled","_templateObject","_taggedTemplateLiteral","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","URL","URL_IMG","KEY","fetchSearchMovieData","searchQuery","searchParams","response","URLSearchParams","api_key","query","axios","abrupt","error","fetchMovieDetails","_ref2","_callee2","_context2","_x2","fetchCreditsMovieData","then","resp","catch","fetchTrendingMovieDay","results"],"sourceRoot":""}