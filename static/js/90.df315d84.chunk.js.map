{"version":3,"file":"static/js/90.df315d84.chunk.js","mappings":"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","sources":["components/MovieDetailsList.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["// import { useState } from \"react\";\n// import { URL_IMG } from \"services/api\";\n\nimport { useParams } from \"react-router-dom\";\n\nconst DetailList = ({ posterImgUrl }) => {\n    const { movieId } = useParams;\n    // const { overview, poster_path, original_title, vote_average, genres } = movies;\n    // const defaultImg = 'https://images.app.goo.gl/8wQwgukfmUNAFbUi8';\n    const posterUrl = `${posterImgUrl}w500${movieId.poster_path}`;\n    return (\n        <>\n            \n            <img src={posterUrl} alt={movieId.title} />\n            <p>{movieId.title}</p>\n            <p>User score: {Math.round(Number(movieId.vote_average) * 10)} % </p>\n            <p>{movieId.overview}</p>\n            <ul>Genres:\n                {movieId.genres.map(genre => genre.name).join(' ')}\n            </ul>\n        </>\n    )\n};\nexport default DetailList;","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport React from 'react';\n\nimport { useRef, Suspense, useState, useEffect } from \"react\"; \n// import { Loader } from 'components/Loader/Loader';\nimport * as API from 'services/api';\n// import { URL_IMG } from 'services/api';\nimport DetailList from 'components/MovieDetailsList';\n\nconst MovieDetails = () => {\n  const posterImgUrl = API.URL_IMG;\n   const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const detailsMovieData = async (id) => {\n      try {\n        // setIsLoading(true);\n        const detailsMovie = await API.fetchMovieDetails(id);\n        setMovieData(detailsMovie)\n      } catch (error) {\n      console.log(error.message);\n    }\n    };\n   useEffect(() => {\n    // if (!movieId) return;\n    \n     detailsMovieData(movieId);\n  }, [movieId])\n\n  return (\n    <>\n      {movieData && (\n      <>\n        <DetailList movie={movieData} posterImgUrl={posterImgUrl} />\n        <Link to={backLinkLocationRef.current}>Назад к странице коллекции</Link>\n      </>  \n      )}\n      \n      {/* {error && <p>Something goes wrong</p>} */}\n      {/* {isLoading && <Loader />} */}\n      \n      <h1>Movie Details: {movieData?.title\n || 'Title not available'}</h1>\n      <ul>\n        <li>\n          <Link to=\"cast\">Actors</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">About</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>LOADING SUBPAGE...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n// const URLCredits = 'https://api.themoviedb.org/3/movie/{movie_id}/credits'\n// PATH PARAMS: {movie_id: ''}\n// const URLReviews = 'https://api.themoviedb.org/3/movie/{movie_id}/reviews'\n// PATH PARAMS: {movie_id: ''}\nconst URL = 'https://api.themoviedb.org/3/';\n// PATH PARAMS: {movie_id: ''}, QUERY PARAMS: {append_to_response: video, image, describe.....}\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\n// const IMG_BASE_URL = 'https://image.tmdb.org/t/p/';\n// const URLSearch = 'https://api.themoviedb.org/3/search/movie'\nconst KEY = 'aa3953ee8706f4bf1c70825a0873668c';\n\nexport const fetchSearchMovieData = async (searchQuery) => {\n     const searchParams = new URLSearchParams({\n         api_key: KEY,\n         query: searchQuery\n  });\n     try {\n        const response = axios.get(`${URL}search/movie?api_key=${searchParams}`);\n         return response.data;\n        \n    } catch (error) {\n        // Handle errors here\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n    }\n// async function fetchCreditsMovieData(id) {\n//   const searchParams = new URLSearchParams({\n//     api_key: KEY,\n//   });\n\n//   const response = await axios.get(\n//     `${URL}movie/${id}/credits?${searchParams}`\n//   );\n\n//   if (response.data.cast) {\n//     return response.data.cast;\n//   }\n//   return Promise.reject(\n//     new Error(`\n//   There are no info about cast for this movie`)\n//   );\n// }\n// // ______________________________________\n// export const fetchMovieDetails = async movieId => {\n//     const res = await axios.get(`${URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n//     console.log(res.data) ;\n// }\nexport const fetchMovieDetails = async (movieId) => {\n     const searchParams = new URLSearchParams({\n         api_key: KEY,\n         id: movieId,\n  });\n     try {\n        const response = axios.get(`${URL}movie?api_key=${searchParams}`);\n         return response.movieId;\n        \n    } catch (error) {\n        // Handle errors here\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n    }\n// export const fetchMovieDetails = (movieId) => {\n//     return axios.get(`${URL}movie/${movieId}?api_key=${KEY}&language=en-US`)\n//         .then(resp => resp.data)\n//         .catch(error => {\n//             console.error('Error fetching credits movies:', error);\n//             throw error;\n//         });\n// };\n// export const fetchCreditsMovieData = async (id) => {\n//     const resp = await axios.get(`${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`);\n//     console.log(resp) ;\n// }\nexport const fetchCreditsMovieData = () => {\n    return axios.get(`${URL}movie/credits?api_key=${KEY}&language=en-US`)\n        .then(resp => resp.data)\n        .catch(error => {\n            console.error('Error fetching credits movies:', error);\n            throw error;\n        });\n};\n\nexport const fetchTrendingMovieDay = () => {\n    return axios.get(`${URL}trending/movie/day?api_key=${KEY}`)\n        .then(response => response.data.results)\n        .catch(error => {\n            console.error('Error fetching trending movies:', error);\n            throw error;\n        });\n};\n// export const fetchTrendingMovieDay = async () => {\n//     const {response} = await axios.get(`${URL}trending/all/day?api_key=${KEY}`);\n//     return response.data.results;\n// }\n// export const fetchDetailsMovie = async movieId => {\n//     const { data } = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n//     return data;\n// }\n// const api = { fetchCreditsMovieData };\n// export default api;"],"names":["_ref","posterImgUrl","movieId","useParams","posterUrl","concat","poster_path","_jsxs","_Fragment","children","_jsx","src","alt","title","Math","round","Number","vote_average","overview","genres","map","genre","name","join","_location$state$from","_location$state","API","location","useLocation","backLinkLocationRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","detailsMovieData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","detailsMovie","wrap","_context","prev","next","sent","t0","console","log","message","stop","_x","apply","arguments","useEffect","DetailList","movie","Link","to","current","Suspense","fallback","Outlet","URL","URL_IMG","KEY","fetchSearchMovieData","searchQuery","searchParams","response","URLSearchParams","api_key","query","axios","abrupt","data","error","fetchMovieDetails","_ref2","_callee2","_context2","_x2","fetchCreditsMovieData","then","resp","catch","fetchTrendingMovieDay","results"],"sourceRoot":""}