{"version":3,"file":"static/js/431.90445428.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Movie/Movie.styled.js","components/Movie/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/MovieSearchForm.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nwidth: 180px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;`","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Wrapper>\n       <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/> \n    </Wrapper>\n    ) \n}","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nconst Ul = styled.ul`\nlist-style: none;\npadding: 0%;\n\n`\nconst Options = styled(Link)`\ntext-decoration: none;\nfont-size: medium;\nfont-weight: bold;\ncolor: black;\nfont-size: 15px;\n&:hover,:focus, ::after{\n    color: blue;\n}`\n\nconst Li = styled.li`\nmargin-bottom: 10px;\npadding-left: 20px;\n`\nconst Title = styled.h2`\nfont-size: medium;\n\n`\nconst Div = styled.div`\n\n`\nexport { Ul, Options, Li, Title, Div }","\nimport React from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { Options, Ul, Title, Div } from \"./Movie.styled\";\nimport PropTypes from 'prop-types';\n// import { URL_IMG } from \"services/api\";\n\nconst MovieList = ({ movies }) => {\n  // const { backdrop_path, id, title } = movies || {}; \nconst location = useLocation();\n  const visibleMovies = movies.filter(movie => movie.id && movie.title && movie.backdrop_path);\n  // const posterUrl = `${URL_IMG}w300${backdrop_path}`;\n    return (\n        <Div>\n           <Ul>\n             {visibleMovies.map(movie => (\n              <li key={movie.id}>\n                <Options to={`/movies/${movie.id}`} state={{ from: location }}>\n                   <Title>{movie.title}</Title>\n                   {/* {backdrop_path && (\n        <img src={posterUrl} alt={title} />\n      )} */}\n                </Options>\n              </li>\n            ))}\n          </Ul>\n        </Div>\n           )\n}\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n}\nexport default MovieList;    \n\n","import styled from '@emotion/styled'\n\nconst SearchbarHead = styled.header`\ntop: 0;\nposition: sticky;\nz-index: 1100;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmin-height: 64px;\npadding-right: 24px;\npadding-left: 24px;\npadding-top: 12px;\npadding-bottom: 12px;\ncolor: #fff;\nbackground-color: #3f51b5;\nbox-shadow: 0px 2px 4px 1px rgba(0, 0, 0, 0.2),\n0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\nleft: 0;\n`\nconst SearchForm = styled.form`\ndisplay: flex;\nalign-items: center;\nwidth: 100%;\nmax-width: 600px;\nbackground-color: #fff;\nborder-radius: 3px;\noverflow: hidden;\n`\nconst SearchFormBtn = styled.button`\ndisplay: inline-block;\nheight: 48px;\nborder: 0;\n\nbackground-size: 40%;\nbackground-repeat: no-repeat;\nbackground-position: center;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\nwidth: 48px;\n&:hover {\nopacity: 1;\n}\n`\nconst SearchFormBtnLabel = styled.span`\nposition: absolute;\nheight: 1px;\npadding: 0;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nclip-path: inset(50%);\nborder: 0;\nwidth: 1px;\n`\nconst SearchFormInput = styled.input`\ndisplay: inline-block;\nfont: inherit;\nfont-size: 20px;\nborder: none;\noutline: none;\npadding-left: 4px;\npadding-right: 4px;\nwidth: 100%;\n&::placeholder {\n    font: inherit;\n    font-size: 18px;\n}\n`\nexport { SearchbarHead, SearchForm, SearchFormBtn, SearchFormInput, SearchFormBtnLabel }","import { toast } from 'react-toastify';\nimport { SearchbarHead, SearchForm,SearchFormBtn, SearchFormBtnLabel,SearchFormInput } from '../Searchbar/Searchbar.styled';\nimport {  useState } from \"react\";\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from \"prop-types\";\n\nexport default function Searchbar ({onSubmit}) { \n  const [searchQuery, setSearchQuery] = useState('');\n  \n    const handleNameChange = event => {\n      setSearchQuery(event.currentTarget.value.toLowerCase())\n    };\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (searchQuery.trim() === '' ) {\n      toast.info(\"Please! Enter your search query! Ok\");\n            return;\n        }\n        onSubmit(searchQuery)\n        setSearchQuery('')\n  }\n          return (\n    <>\n      <SearchbarHead>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormBtn type=\"submit\">\n            <ImSearch style={{ marginRight: 2, marginTop: 4, width: 25, height: 25 }} />\n            <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n          </SearchFormBtn>\n          <SearchFormInput\n            type=\"text\"\n            name=\"searchQuery\"\n            value={searchQuery}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </SearchForm>\n      </SearchbarHead>\n    </>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect} from \"react\"; \nimport * as API from 'services/api';\nimport Searchbar from '../components/Searchbar/MovieSearchForm';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/Movie/MovieList';\n\n// import {  toast } from 'react-toastify';\n\nconst Movies = () => {\n  \n  const [movieSearch, setMovieSearch] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const updateQueryString = query => {\n    const nextParams = query.trim() !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    if (query.trim() === '') {\n      setMovieSearch([]);\n    }\n  };\n const searchMovieData = async (searchQuery) => {\n    try {\n      const response = await API.fetchSearchMovieData(searchQuery);\n      setMovieSearch(response.results);\n    } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n  };\n\n  useEffect(() => {\n    if(query === '') {\n      return;\n    }\n    searchMovieData(query);\n  }, [query]);\n\n\n  return (\n       <>\n      <div>\n        {isLoading && <Loader />}\n          <Searchbar onSubmit={updateQueryString} />\n           {error ? (<p>Error: {error.message}</p>\n                ) : searchParams !== 0 ? movieSearch && (\n                    <MovieList movies={movieSearch} />\n                ) : (\n                    <p>No movies found.</p> \n                )}\n        </div>\n     \n      \n  </>\n  )\n}\n\nexport default Movies;\n\n\n","import axios from \"axios\";\nexport const URL = 'https://api.themoviedb.org/3/';\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\n\nexport const API_KEY = '0c24bd03222b39ae028a9061bc80e8a5';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MTIzMmM2NWVkOGEyYzk3YzJjZDZkN2Y2NjJhNThhNiIsInN1YiI6IjY0ZGNjNzQ2NTllOGE5MDBhYzA3ZjkyMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VEfQXLXm8dTFjmSR93bdP0x3SCZbTJRytNBaFFU8fLo'\n  }\n};\nexport const fetchSearchMovieData = async (searchQuery) => {\n       try {\n        const response = axios.get(`${URL}search/movie?query=${searchQuery}` , options);\n        return  ((await response).data);\n      } catch (error) {\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n}\n    \n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const resp = await axios.get(`${URL}movie/${movieId}` , options)\n    return resp.data;\n  } catch (error) {\n    console.error('Error fetching  movies:', error);\n    throw error\n  };\n};\nexport const fetchReviewMovieData = async (movieId) => {\n  try {\n    const response = await axios.get(`${URL}movie/${movieId}/reviews?language=en-US&page=1`, options);\n\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews movies:', error);\n    throw error;\n  }\n};\n  \n  \n// export const fetchReviewMovieData = (movieId) => {\n//     return axios.get(`${URL}movie/${movieId}/reviews?language=en-US` , options)\n//         .then(resp => resp.data)\n//         .catch(error => {\n//             console.error('Error fetching reviews movies:', error);\n//             throw error;\n//         });\n// };\nexport const fetchCreditsMovieData = (movieId) => {\n    return axios.get(`${URL}movie/${movieId}/credits?language=en-US`, options)\n        .then(resp => resp.data)\n        .catch(error => {\n            console.error('Error fetching credits movies:', error);\n            throw error;\n        });\n};\n\nexport const fetchTrendingMovieDay = () => {\n    return axios.get(`${URL}trending/movie/day`, options)\n        .then(response => response.data.results)\n        .catch(error => {\n            console.error('Error fetching trending movies:', error);\n            throw error;\n        });\n};\n\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","Ul","Options","Link","_templateObject2","Li","_templateObject3","Title","_templateObject4","Div","_templateObject5","_ref","movies","location","useLocation","visibleMovies","filter","movie","id","title","backdrop_path","map","to","concat","state","from","SearchbarHead","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchFormInput","Searchbar","onSubmit","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_Fragment","_jsxs","e","preventDefault","trim","toast","type","ImSearch","style","marginRight","marginTop","name","value","onChange","event","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","_searchParams$get","movieSearch","setMovieSearch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","searchMovieData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","API","sent","results","t0","finish","stop","_x","apply","arguments","useEffect","nextParams","message","MovieList","URL","URL_IMG","options","method","headers","accept","Authorization","fetchSearchMovieData","axios","abrupt","data","console","fetchMovieDetails","_ref2","_callee2","movieId","resp","_context2","_x2","fetchReviewMovieData","_ref3","_callee3","_context3","_x3","fetchCreditsMovieData","then","catch","fetchTrendingMovieDay"],"sourceRoot":""}