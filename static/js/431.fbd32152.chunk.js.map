{"version":3,"file":"static/js/431.fbd32152.chunk.js","mappings":"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","sources":["components/Movie/MovieItem.jsx","components/Movie/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/MovieSearchForm.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nexport const MovieItem = ({title,name, movieId}) => {\n const location = useLocation();\n  return (\n      <li >\n            <Link  to={`movies/${movieId}`} state={{ from: location }}>\n              {title?? name}\n            </Link>  \n            </li>\n)    \n}\n\n","import { MovieItem } from \"./MovieItem\";\n// import {  useLocation } from 'react-router-dom';\nexport const MovieList = ({ movies }) => {\n\n    const visibleMovies = movies.filter(movie => movie.id && movie.title);\n    return (\n        \n        <ul>\n            {visibleMovies.map(movie => (\n            <MovieItem key={movie.id} title={movie.title} \n            movieId={movie.id}\n            poster={movie['poster_path']}\n            type={movie['media_type']}\n            rating={movie['vote_average']}\n            date={movie['release_date']}/>\n            ))}\n        </ul>\n           )\n}\n        \n\n","import styled from '@emotion/styled'\n\nconst SearchbarHead = styled.header`\ntop: 0;\nposition: sticky;\nz-index: 1100;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmin-height: 64px;\npadding-right: 24px;\npadding-left: 24px;\npadding-top: 12px;\npadding-bottom: 12px;\ncolor: #fff;\nbackground-color: #3f51b5;\nbox-shadow: 0px 2px 4px 1px rgba(0, 0, 0, 0.2),\n0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\nleft: 0;\n`\nconst SearchForm = styled.form`\ndisplay: flex;\nalign-items: center;\nwidth: 100%;\nmax-width: 600px;\nbackground-color: #fff;\nborder-radius: 3px;\noverflow: hidden;\n`\nconst SearchFormBtn = styled.button`\ndisplay: inline-block;\nheight: 48px;\nborder: 0;\n\nbackground-size: 40%;\nbackground-repeat: no-repeat;\nbackground-position: center;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\nwidth: 48px;\n&:hover {\nopacity: 1;\n}\n`\nconst SearchFormBtnLabel = styled.span`\nposition: absolute;\nheight: 1px;\npadding: 0;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nclip-path: inset(50%);\nborder: 0;\nwidth: 1px;\n`\nconst SearchFormInput = styled.input`\ndisplay: inline-block;\nfont: inherit;\nfont-size: 20px;\nborder: none;\noutline: none;\npadding-left: 4px;\npadding-right: 4px;\nwidth: 100%;\n&::placeholder {\n    font: inherit;\n    font-size: 18px;\n}\n`\nexport { SearchbarHead, SearchForm, SearchFormBtn, SearchFormInput, SearchFormBtnLabel }","import { toast } from 'react-toastify';\nimport { SearchbarHead, SearchForm,SearchFormBtn, SearchFormBtnLabel,SearchFormInput } from '../Searchbar/Searchbar.styled';\nimport {  useState } from \"react\";\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from \"prop-types\";\n// import { MovieList } from 'components/Movie/MovieList';\n// import { useParams } from 'react-router-dom';\n// import * as API from 'services/api';\n// import { Loader } from 'components/Loader/Loader';\n\n\nexport default function Searchbar ({onSubmit}) { \n  const [searchQuery, setSearchQuery] = useState('');\n  // const [movieSearch, setMovieSearch] = useState([]);\n  // const { movieId } = useParams();\n  // const [error, setError] = useState(null);\n  // const [isLoading, setIsLoading] = useState(false);\n  \n    const handleNameChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n    \n  };\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (searchQuery.trim() === '') {\n      toast.info(\"Please! Enter your search query! Ok\");\n            return;\n        }\n        onSubmit(searchQuery)\n        setSearchQuery('')\n  }\n  // useEffect(() => {\n      \n  //    const movieSearchFilm = async (searchQuery) => {\n  //      try {\n  //        const movieSearchData = await API.fetchSearchMovieData(searchQuery)\n  //        setMovieSearch(movieSearchData);\n  //      } catch (error) {\n  //        setError(error);\n  //      } finally {\n  //        setIsLoading(false);\n  //      }\n  //    };\n  //      movieSearchFilm();\n       \n  // }, [searchQuery])\n\n    \n        return (\n        <>\n          <SearchbarHead>\n                  <SearchForm onSubmit={handleSubmit} >\n                      <SearchFormBtn type=\"submit\" ><ImSearch style= {{marginRight: 2,marginTop:4,width:25,height:25}}/>\n                     <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n              </SearchFormBtn>\n                      <SearchFormInput\n                      type=\"text\"\n                              name=\"searchQuery\"\n                              value={searchQuery}\n                      onChange={handleNameChange}\n                          autoComplete=\"off\"\n                          autoFocus\n                placeholder=\"Search images and photos\"\n              />\n                  </SearchForm>\n            </SearchbarHead>\n           \n        </>\n          )\n    }\n    \nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n// import { Formik, Form, Field } from 'formik';\n\n// export const MaterialEditorForm = ({\n//   initialValues = { title: '', link: '' },\n//   onSubmit,\n//   btnText,\n// }) => {\n//   const handleSubmit = async (values, actions) => {\n//     await onSubmit(values);\n//     actions.setSubmitting(false);\n//     actions.resetForm();\n//   };\n//   return (\n//     <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n//       {({ isSubmitting }) => (\n//         <Form>\n//           <label>\n//             Описание\n//             <Field name=\"title\" type=\"text\" />\n//           </label>\n//           <br />\n//           <label>\n//             Ссылка\n//             <Field name=\"link\" type=\"text\" />\n//           </label>\n//           <br />\n//           <button type=\"submit\" disabled={isSubmitting}>\n//             {btnText}\n//           </button>\n//         </Form>\n//       )}\n//     </Formik>\n//   );\n// };\n/* <div>\n          {isLoading && <Loader />}\n              <h2>Movie {searchQuery}</h2>\n           {error ? (<p>Error: {error.message}</p>\n                ) : searchQuery !== 0 ? (\n                    <MovieList movies={movieSearch}/>\n                ) : (\n                    <p>No movies found.</p>\n                )}\n        </div> */\n            ","import {  useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport * as API from 'services/api';\nimport Searchbar from '../components/Searchbar/MovieSearchForm';\nimport { MovieList } from 'components/Movie/MovieList';\n\n// import {  toast } from 'react-toastify';\n\nconst Movies = () => {\n  \n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query.trim() !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    if (query.trim() === '') {\n      setMovies([]);\n    }\n  };\n\nconst searchMovieData = async (searchQuery) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await API.fetchSearchMovieData(searchQuery);\n      setMovies(response.results);\n    } catch (error) {\n      console.log(error)\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    searchMovieData(query);\n  }, [query]);\n\n  return (\n    <>\n      <Searchbar onSubmit={updateQueryString} />\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>Error: {error.message}</p>\n      ) : query.length === 0 ? (\n            <p>{ \"\"}</p>\n      ) :  movies !== 0 ? (\n        <MovieList movies={movies} /> \n      ) : (\"No movies found.\")}\n    </>\n  );\n};\n\n \n\nexport default Movies;\n\n // return (\n  //   <>\n  //     <h2>Movie</h2>\n  //     <div>\n  //       <input type=\"text\" value={movieId} onChange={updateQueryString} />\n  //       <button>Search</button>\n        \n       \n  //     </div>\n  //   </>\n  // );\n// };","import axios from \"axios\";\nexport const URL = 'https://api.themoviedb.org/3/';\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\n\nexport const API_KEY = '0c24bd03222b39ae028a9061bc80e8a5';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MTIzMmM2NWVkOGEyYzk3YzJjZDZkN2Y2NjJhNThhNiIsInN1YiI6IjY0ZGNjNzQ2NTllOGE5MDBhYzA3ZjkyMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VEfQXLXm8dTFjmSR93bdP0x3SCZbTJRytNBaFFU8fLo'\n  }\n};\nexport const fetchSearchMovieData = async (searchQuery) => {\n       try {\n        const response = axios.get(`${URL}search/movie?query=${searchQuery}` , options);\n        return  ((await response).data);\n      } catch (error) {\n        console.error('Error fetching search movies:', error);\n        throw error;\n    }\n}\n    \n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const resp = await axios.get(`${URL}movie/${movieId}` , options)\n    return resp.data;\n  } catch (error) {\n    console.error('Error fetching  movies:', error);\n    throw error\n  };\n};\nexport const fetchReviewMovieData = async (movieId) => {\n  try {\n    const response = await axios.get(`${URL}movie/${movieId}/reviews?language=en-US&page=1`, options);\n\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews movies:', error);\n    throw error;\n  }\n};\n  \n  \n// export const fetchReviewMovieData = (movieId) => {\n//     return axios.get(`${URL}movie/${movieId}/reviews?language=en-US` , options)\n//         .then(resp => resp.data)\n//         .catch(error => {\n//             console.error('Error fetching reviews movies:', error);\n//             throw error;\n//         });\n// };\nexport const fetchCreditsMovieData = (movieId) => {\n    return axios.get(`${URL}movie/${movieId}/credits?language=en-US`, options)\n        .then(resp => resp.data)\n        .catch(error => {\n            console.error('Error fetching credits movies:', error);\n            throw error;\n        });\n};\n\nexport const fetchTrendingMovieDay = () => {\n    return axios.get(`${URL}trending/movie/day`, options)\n        .then(response => response.data.results)\n        .catch(error => {\n            console.error('Error fetching trending movies:', error);\n            throw error;\n        });\n};\n\n"],"names":["MovieItem","_ref","title","name","movieId","location","useLocation","_jsx","children","Link","to","concat","state","from","MovieList","visibleMovies","movies","filter","movie","id","map","poster","type","rating","date","SearchbarHead","styled","_templateObject","_taggedTemplateLiteral","SearchForm","_templateObject2","SearchFormBtn","_templateObject3","SearchFormBtnLabel","_templateObject4","SearchFormInput","_templateObject5","Searchbar","onSubmit","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_Fragment","_jsxs","e","preventDefault","trim","toast","ImSearch","style","marginRight","marginTop","width","height","value","onChange","event","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","searchMovieData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","API","sent","results","t0","console","log","finish","stop","_x","apply","arguments","useEffect","nextParams","message","length","URL","URL_IMG","options","method","headers","accept","Authorization","fetchSearchMovieData","axios","abrupt","data","fetchMovieDetails","_ref2","_callee2","resp","_context2","_x2","fetchReviewMovieData","_ref3","_callee3","_context3","_x3","fetchCreditsMovieData","then","catch","fetchTrendingMovieDay"],"sourceRoot":""}